<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context" 
	xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:tx="http://www.springframework.org/schema/tx" 
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd"
	default-lazy-init="false">

	<context:component-scan base-package="com.fla.common.service">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Service" />
		<context:exclude-filter type="annotation" expression="org.springframework.web.bind.annotation.ControllerAdvice"/>
	</context:component-scan>
	
	<context:component-scan base-package="com.fla.common.dao">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Component" />
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Service" />
		<context:exclude-filter type="annotation" expression="org.springframework.web.bind.annotation.ControllerAdvice"/>
	</context:component-scan>
	
	<context:component-scan base-package="com.fla.common.util">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Service" />
		<context:exclude-filter type="annotation" expression="org.springframework.web.bind.annotation.ControllerAdvice"/>
	</context:component-scan>
	
	<!-- webSocket -->
	<context:component-scan base-package="com.fla.common.webSocket">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Service" />
		<context:exclude-filter type="annotation" expression="org.springframework.web.bind.annotation.ControllerAdvice"/>
	</context:component-scan>

	<context:property-placeholder location="classpath:com/fla/common/dao/jdbc.properties" />
	
	<context:property-placeholder location="classpath:com/fla/common/util/application.properties" />
	
	<!-- <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"/> -->
    <!-- <bean id="multipartResolver" class="com.fla.common.excel.core.ProgressMultipartResolver"/> -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"></bean>
    
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
  		<property name="driverClassName" value="${jdbc.driverClassName}" />
  		<property name="url" value="${jdbc.url}"/>
  		<property name="username" value="${jdbc.username}"/>
  		<property name="password" value="${jdbc.password}"/>
	</bean>
	
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="typeAliasesPackage" value="com.fla.common.dao.mapper"/>
        <property name="mapperLocations" value="classpath:com/fla/common/dao/mapper/*Mapper.xml" />
        <property name="plugins">
            <array>
                <bean class="com.github.miemiedev.mybatis.paginator.OffsetLimitInterceptor">
                    <property name="dialectClass" value="com.github.miemiedev.mybatis.paginator.dialect.MySQLDialect"/>
                    <property name="asyncTotalCount" value="false"/>
                </bean>
            </array>
        </property>
    </bean>
 
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.fla.common.dao.interfaces"/>
        <property name="annotationClass" value="com.fla.common.base.MapperAnnotation"/> <!-- org.springframework.stereotype.Repository -->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>

    </bean>
	
	<!-- 未调试通过，暂时没使用 -->
	<bean id="tempDataSource" class="com.jolbox.bonecp.BoneCPDataSource" destroy-method="close">
        <!-- 数据库驱动 -->
        <property name="driverClass" value="${jdbc.driverClassName}" />
        <!-- 相应驱动的jdbcUrl-->
        <property name="jdbcUrl" value="${jdbc.url}" />
        <!-- 数据库的用户名 -->
        <property name="username" value="${jdbc.username}"/>
        <!-- 数据库的密码 -->
        <property name="password" value="${jdbc.password}"/>
        <!-- 检查数据库连接池中空闲连接的间隔时间，单位是分，默认值：240，如果要取消则设置为0 -->
        <property name="idleConnectionTestPeriod" value="240" />
        <!-- 连接池中未使用的链接最大存活时间，单位是分，默认值：60，如果要永远存活设置为0 -->
        <property name="idleMaxAge" value="60" />
        <!-- 每个分区最大的连接数 -->
        <property name="maxConnectionsPerPartition" value="10" />
        <!-- 每个分区最小的连接数 -->
        <property name="minConnectionsPerPartition" value="5" /> 
        <!-- 分区数 ，默认值2，最小1，推荐3-4，视应用而定-->
        <property name="partitionCount" value="1" />
        <!-- 每次去拿数据库连接的时候一次性要拿几个,默认值：2 -->  
        <property name="acquireIncrement" value="1" />
        <!-- 缓存prepared statements的大小，默认值：0 -->
        <property name="statementsCacheSize" value="0" />
        <!-- 每个分区释放链接助理进程的数量，默认值：3，除非你的一个数据库连接的时间内做了很多工作，不然过多的助理进程会影响你的性能 -->  
        <property name="releaseHelperThreads" value="3" />
    </bean>

	<!-- 使用Spring提供的数据源的事务管理器DataSourceTransactionManager -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
 			<property name="dataSource" ref="dataSource" /> <!-- 注入我们定义的数据源 -->
	</bean>

    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource">
        	<ref bean="dataSource"/>
        </property>
 	</bean>
 	 
 	<!-- 声明采用@Transactional注解方式使用事务 -->
 	<tx:annotation-driven transaction-manager="transactionManager"/>

</beans>